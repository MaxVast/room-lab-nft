version: '3'

silent: true

vars:
  APP_COMPOSE: 'docker-compose run --rm --user=node node'

env:
  NODE_ENV: '{{default "dev" .NODE_ENV}}'

includes:
  docker: ./taskfile/DockerTasks.yml
  yarn: ./taskfile/YarnTasks.yml

tasks:
  default:
    - task --list

  install:
    desc: 'Install project with dependencies.'
    cmds:
      - task docker:build -- --build-arg NODE_ENV={{.NODE_ENV}}
      - task yarn:install
      - task docker:up {{if ne .NODE_ENV "dev"}}-- -f docker-compose.yml{{end}}

  re-install:
    desc: 'Re-Install project with dependencies.'
    cmds:
      - task: docker:clean
      - task: install

  health-check:
    desc: 'Verify app health check.'
    cmds:
      - |
        HTTP_CODE=$(curl -ik -X GET 'https://localhost:3000/' -o /dev/null -w '%{http_code}\n' -s)
        echo $HTTP_CODE
        if [ "$HTTP_CODE" = "200" ]; then
            echo "Health check OK"
            exit 0
        fi
        exit 1

  wait-for:
    desc: "Wait for a given container to be healthy."
    cmds:
      - |
        while status="$(docker inspect -f '{{regexReplaceAll "(if .Config.Healthcheck)( print .State.Health.Status)( end)" "if .Config.Healthcheck print .State.Health.Status end" "{{${1}}}{{${2}}}{{${3}}}"}}' "$(docker-compose ps -q {{.CLI_ARGS}})")"; do
          case $status in
            starting) sleep 1;;
            healthy) exit 0;;
            unhealthy)
              docker-compose ps
              docker-compose logs
              exit 1
            ;;
          esac
        done
        exit 1
